/*******************************************************************************
* generated by lcd-image-converter
* font
* filename: Z:/Windows 10 VM/programmable-load/fonts/General_16_Condensed.xml
* name: General_16_Condensed
* family: Bahnschrift Condensed
* size: 16
* style: Condensed
* included characters:  !"#$%&'()*+,-./0123456789:;<=>?\x0040ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~©®µÄÖÜßäöüΩ
* antialiasing: yes
* type: proportional
* encoding: UTF-16
* unicode bom: no
*
* preset name: Grayscale 4
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Grayscale, not_used not_used
* split to rows: yes
* bits per pixel: 4
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

#include <stdint.h>
#include <etl/array.h>

#include "Gfx/Font.h"



// Storage and visibility attributes for glyphs
#define GLYPH_STORAGE __attribute__((section(".gfxdata.glyphs")))\
    __attribute__((visibility("hidden")))
// Storage and visibility attributes for character descriptors
#define CHARDEF_STORAGE __attribute__((section(".gfxdata.chardef")))\
    __attribute__((visibility("hidden")))

///////////////////////////////////////////////////////////////////////////////////////////////////
// Character data
///////////////////////////////////////////////////////////////////////////////////////////////////

//-----------------------
// Character:   (codepoint 0020)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0020 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: ! (codepoint 0021)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙▒∙
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ∙░∙
    // ∙▓░
    // ░█▒
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0021 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x06, 0x30, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x03, 0x00, 
    0x2a, 0x40, 
    0x3f, 0x70, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: " (codepoint 0022)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ░░░░
    // ▓█▒█
    // ▓█▒█
    // ▓█▒█
    // ▒▒░▓
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0022 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x45, 0x45, 
    0xad, 0x8f, 
    0xad, 0x8f, 
    0xad, 0x8f, 
    0x79, 0x5a, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: # (codepoint 0023)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙▒∙∙░
    // ∙∙░█∙▓▓
    // ∙∙▒█∙▓▒
    // ∙▒██▓██
    // ∙▒██▓█▓
    // ∙∙█▒░█∙
    // ∙░█░▒▓∙
    // ∙░█∙▓▓∙
    // ░█████▓
    // ∙▓▓░█▒∙
    // ∙▓▓░█∙∙
    // ∙█▒░█∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0023 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x06, 0x12, 0x40, 
    0x00, 0x4f, 0x2a, 0x90, 
    0x00, 0x7d, 0x1c, 0x70, 
    0x08, 0xde, 0xbf, 0xc0, 
    0x08, 0xfd, 0xbf, 0xb0, 
    0x00, 0xe7, 0x4d, 0x10, 
    0x03, 0xe4, 0x7c, 0x00, 
    0x04, 0xf2, 0xa9, 0x00, 
    0x4f, 0xff, 0xff, 0xc0, 
    0x0a, 0xc4, 0xe6, 0x10, 
    0x0c, 0x93, 0xe2, 0x00, 
    0x0e, 0x74, 0xd1, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: $ (codepoint 0024)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░█░∙∙
    // ∙∙▒█▒∙∙
    // ∙▓███▓∙
    // ░█▒∙▒█░
    // ░█░∙░█░
    // ░█▒∙∙∙∙
    // ∙▓█▓░∙∙
    // ∙∙▒██▓∙
    // ∙∙∙∙▓█░
    // ∙░∙∙░█░
    // ░█░∙░█░
    // ░█▓░▓█∙
    // ∙▒███▒∙
    // ∙∙░█░∙∙
    // ∙∙∙▒∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0024 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x4d, 0x40, 0x00, 
    0x00, 0x7f, 0x70, 0x00, 
    0x0c, 0xff, 0xfc, 0x00, 
    0x3f, 0x70, 0x7f, 0x40, 
    0x4f, 0x40, 0x4d, 0x40, 
    0x3f, 0x70, 0x00, 0x00, 
    0x0c, 0xfb, 0x40, 0x00, 
    0x00, 0x8f, 0xf9, 0x00, 
    0x00, 0x00, 0xaf, 0x40, 
    0x03, 0x00, 0x4f, 0x40, 
    0x4f, 0x40, 0x4f, 0x40, 
    0x3f, 0xc3, 0xbf, 0x20, 
    0x07, 0xff, 0xf7, 0x00, 
    0x00, 0x4f, 0x40, 0x00, 
    0x00, 0x26, 0x10, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: % (codepoint 0025)
// Size: 9 x 19
// ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙░▒∙∙∙∙░∙
    // ░███∙∙▓▒∙
    // ░█░█∙░█∙∙
    // ░█░█∙▓▓∙∙
    // ░███░█░∙∙
    // ∙░▒∙▓▓∙∙∙
    // ∙∙∙∙█▒∙∙∙
    // ∙∙∙▒█∙██▒
    // ∙∙∙▓▒▒▓▒█
    // ∙∙░█∙▒▓░█
    // ∙∙▓▓∙▒▓░█
    // ∙░█░∙░██▓
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 95>
    image_data_General_16_Condensed_0x0025 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x04, 0x63, 0x00, 0x24, 0x00, 
    0x4f, 0xed, 0x10, 0xc7, 0x00, 
    0x4d, 0x4e, 0x24, 0xf2, 0x00, 
    0x4d, 0x4e, 0x2c, 0x90, 0x00, 
    0x4f, 0xcd, 0x4e, 0x40, 0x00, 
    0x05, 0x63, 0xac, 0x00, 0x00, 
    0x00, 0x00, 0xe7, 0x00, 0x00, 
    0x00, 0x07, 0xd2, 0xcd, 0x70, 
    0x00, 0x0c, 0x77, 0xc7, 0xd0, 
    0x00, 0x4f, 0x27, 0xc4, 0xd0, 
    0x00, 0xa9, 0x07, 0xc4, 0xd0, 
    0x03, 0xe4, 0x03, 0xff, 0x90, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: & (codepoint 0026)
// Size: 8 x 19
// ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙▒▒∙∙∙
    // ∙∙████∙∙
    // ∙░█░░█▒∙
    // ∙░█∙∙█▓∙
    // ∙░█░∙∙∙∙
    // ∙∙█▓∙∙∙∙
    // ∙∙██▒░▓░
    // ░████░█░
    // ▒█∙░███∙
    // ▒█∙∙▒██∙
    // ░█▓░▒██∙
    // ∙▓███▓█▓
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0026 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x06, 0x61, 0x00, 
    0x00, 0xef, 0xff, 0x20, 
    0x04, 0xf4, 0x3f, 0x70, 
    0x04, 0xf2, 0x0e, 0x90, 
    0x04, 0xf4, 0x00, 0x00, 
    0x00, 0xec, 0x00, 0x00, 
    0x02, 0xdf, 0x73, 0xc4, 
    0x3f, 0xed, 0xf5, 0xe4, 
    0x7f, 0x23, 0xff, 0xf2, 
    0x7f, 0x20, 0x7f, 0xd1, 
    0x4f, 0xa3, 0x8f, 0xf2, 
    0x0a, 0xff, 0xfa, 0xfc, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: ' (codepoint 0027)
// Size: 2 x 19
// ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
    // ░░
    // ▓█
    // ▓█
    // ▓█
    // ▒▒
    // ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
    // ∙∙
//-----------------------
static const etl::array<const uint8_t, 19>
    image_data_General_16_Condensed_0x0027 GLYPH_STORAGE {{
    0x00, 
    0x00, 
    0x00, 
    0x00, 
    0x45, 
    0xad, 
    0xad, 
    0xad, 
    0x79, 
    0x00, 
    0x00, 
    0x00, 
    0x00, 
    0x00, 
    0x00, 
    0x00, 
    0x00, 
    0x00, 
    0x00
}};

//-----------------------
// Character: ( (codepoint 0028)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙░
    // ∙∙█▓
    // ∙░█∙
    // ∙▓▓∙
    // ∙█▓∙
    // ░█▒∙
    // ░█░∙
    // ░█░∙
    // ░█░∙
    // ░█░∙
    // ∙█▒∙
    // ∙▓▓∙
    // ∙▓█∙
    // ∙░█░
    // ∙∙▓▓
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0028 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x24, 
    0x00, 0xe9, 
    0x04, 0xf2, 
    0x0a, 0xc0, 
    0x0e, 0x90, 
    0x3f, 0x70, 
    0x3e, 0x40, 
    0x3e, 0x40, 
    0x3e, 0x40, 
    0x3e, 0x40, 
    0x0e, 0x70, 
    0x0c, 0x90, 
    0x0a, 0xd1, 
    0x04, 0xf4, 
    0x00, 0xc9, 
    0x00, 0x21
}};

//-----------------------
// Character: ) (codepoint 0029)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ░∙∙∙
    // ▓▓∙∙
    // ░█∙∙
    // ∙█▒∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▒█∙
    // ∙▒█∙
    // ∙▒█∙
    // ∙▓█∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ░█▒∙
    // ▒█∙∙
    // █▓∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0029 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x51, 0x00, 
    0xc9, 0x00, 
    0x4f, 0x20, 
    0x0e, 0x70, 
    0x0c, 0x90, 
    0x0a, 0xc0, 
    0x07, 0xd1, 
    0x07, 0xd1, 
    0x07, 0xd1, 
    0x0a, 0xd1, 
    0x0a, 0xc0, 
    0x0c, 0x90, 
    0x3f, 0x70, 
    0x7f, 0x20, 
    0xe9, 0x00, 
    0x21, 0x00
}};

//-----------------------
// Character: * (codepoint 002a)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙░▓∙
    // ▒▓█▓
    // ░██▒
    // ░██▓
    // ░▒░▓
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x002a GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x10, 
    0x04, 0xc0, 
    0x8b, 0xec, 
    0x4d, 0xf7, 
    0x3e, 0xe9, 
    0x68, 0x3a, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: + (codepoint 002b)
// Size: 5 x 19
// ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙░∙∙
    // ∙∙█▒∙
    // ∙∙█▒∙
    // ▓████
    // ░▒█▓░
    // ∙∙█▒∙
    // ∙∙█▒∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x002b GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x53, 0x00, 
    0x00, 0xe7, 0x00, 
    0x00, 0xe7, 0x00, 
    0xaf, 0xff, 0xd0, 
    0x46, 0xfa, 0x50, 
    0x00, 0xe7, 0x00, 
    0x00, 0xe7, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: , (codepoint 002c)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ░▓░
    // ▒█░
    // ▒█░
    // ▒▓∙
    // ░∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x002c GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x5a, 0x40, 
    0x7f, 0x40, 
    0x7f, 0x40, 
    0x79, 0x00, 
    0x30, 0x00
}};

//-----------------------
// Character: - (codepoint 002d)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ░███▓∙
    // ∙▓▓▓▒∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x002d GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x3c, 0xdd, 0xb1, 
    0x2a, 0xbb, 0x91, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: . (codepoint 002e)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ░▓░
    // ▒█░
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x002e GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x5a, 0x40, 
    0x7f, 0x40, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: / (codepoint 002f)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙░█
    // ∙∙░█
    // ∙∙▓▓
    // ∙∙▓▓
    // ∙∙█▒
    // ∙░█░
    // ∙░█∙
    // ∙▒█∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙█▒∙
    // ░█░∙
    // ░█∙∙
    // ▒█∙∙
    // ▓▓∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x002f GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x3d, 
    0x00, 0x4d, 
    0x00, 0xac, 
    0x00, 0xc9, 
    0x00, 0xe7, 
    0x03, 0xe4, 
    0x04, 0xf2, 
    0x07, 0xd1, 
    0x0a, 0xc0, 
    0x0c, 0x90, 
    0x0e, 0x70, 
    0x3e, 0x40, 
    0x4f, 0x20, 
    0x7d, 0x10, 
    0xac, 0x00, 
    0x21, 0x00
}};

//-----------------------
// Character: 0 (codepoint 0030)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓███▓∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▓▒█▓∙
    // ∙▒███░∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0030 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x56, 0x40, 0x00, 
    0x0c, 0xff, 0xf9, 0x00, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0xc6, 0xec, 0x00, 
    0x07, 0xff, 0xe4, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: 1 (codepoint 0031)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙▒░
    // ░██▓
    // ▓▓█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙█▓
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0031 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x02, 0x64, 
    0x6f, 0xf9, 
    0xa9, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0xe9, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: 2 (codepoint 0032)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙░▒░∙
    // ∙▓███▒
    // ░█▒∙▓▓
    // ░█░∙▓█
    // ∙∙∙∙█▓
    // ∙∙∙░█▒
    // ∙∙∙██∙
    // ∙∙▒█░∙
    // ∙∙█▓∙∙
    // ∙▓█░∙∙
    // ░██▒▒░
    // ░█████
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0032 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x56, 0x40, 
    0x0c, 0xff, 0xf7, 
    0x3f, 0x70, 0xcc, 
    0x4d, 0x40, 0xad, 
    0x00, 0x00, 0xec, 
    0x00, 0x04, 0xf7, 
    0x00, 0x0e, 0xd1, 
    0x00, 0x7f, 0x40, 
    0x00, 0xec, 0x00, 
    0x0a, 0xf4, 0x00, 
    0x3f, 0xe6, 0x65, 
    0x4f, 0xff, 0xfd, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: 3 (codepoint 0033)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙▒▒∙∙
    // ∙████░
    // ░█░∙█▓
    // ░█░∙█▓
    // ∙∙∙∙█▓
    // ∙∙░▓█∙
    // ∙∙▒██░
    // ∙∙∙∙▓▓
    // ∙∙∙∙▓▓
    // ▒█∙∙▓▓
    // ▒█▒▒█▓
    // ∙▓███∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0033 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x66, 0x30, 
    0x0e, 0xff, 0xf4, 
    0x4f, 0x40, 0xe9, 
    0x4d, 0x40, 0xe9, 
    0x00, 0x00, 0xe9, 
    0x00, 0x5b, 0xf2, 
    0x00, 0x7f, 0xe4, 
    0x00, 0x00, 0xcc, 
    0x03, 0x00, 0xcc, 
    0x7f, 0x20, 0xcc, 
    0x7f, 0x98, 0xf9, 
    0x0a, 0xff, 0xe2, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: 4 (codepoint 0034)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙░░∙∙
    // ∙∙░█▒∙∙
    // ∙∙▒█░∙∙
    // ∙∙▓█∙∙∙
    // ∙∙█▓∙∙∙
    // ∙░█░▒▒∙
    // ∙▓█∙▓▓∙
    // ∙█▓∙▓▓∙
    // ░█▓░▓▓∙
    // ░█████▓
    // ∙░░░▓▓∙
    // ∙∙∙∙▓▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0034 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x05, 0x40, 0x00, 
    0x00, 0x3f, 0x70, 0x00, 
    0x00, 0x7f, 0x40, 0x00, 
    0x00, 0xcd, 0x10, 0x00, 
    0x00, 0xe9, 0x00, 0x00, 
    0x04, 0xf5, 0x88, 0x00, 
    0x0a, 0xf2, 0xcc, 0x00, 
    0x0e, 0xc0, 0xcc, 0x00, 
    0x3f, 0x94, 0xcc, 0x10, 
    0x4f, 0xff, 0xff, 0x90, 
    0x03, 0x34, 0xcc, 0x10, 
    0x00, 0x00, 0xcc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: 5 (codepoint 0035)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙░▒▒▒░∙
    // ∙████▓∙
    // ∙█▓∙∙∙∙
    // ∙█▓∙∙∙∙
    // ∙█▓█▓∙∙
    // ∙██▓█▓∙
    // ∙▓░∙▓▓∙
    // ∙∙∙∙▓█∙
    // ∙∙∙∙▓█∙
    // ░█▒∙▓█∙
    // ░█▓▒█▓∙
    // ∙▒███∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0035 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x05, 0x66, 0x64, 0x00, 
    0x0e, 0xff, 0xfc, 0x00, 
    0x0e, 0x90, 0x00, 0x00, 
    0x0e, 0x90, 0x00, 0x00, 
    0x0e, 0xcc, 0xb1, 0x00, 
    0x0e, 0xfb, 0xf9, 0x00, 
    0x0a, 0x60, 0xac, 0x00, 
    0x00, 0x00, 0xad, 0x10, 
    0x00, 0x00, 0xad, 0x10, 
    0x3c, 0x70, 0xad, 0x10, 
    0x3f, 0xc6, 0xfc, 0x00, 
    0x07, 0xff, 0xe2, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: 6 (codepoint 0036)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙░░∙
    // ∙∙░█▒∙
    // ∙∙▓█∙∙
    // ∙∙█▓∙∙
    // ∙▒█░∙∙
    // ∙▓██▒∙
    // ░████▓
    // ▒█∙∙▓▓
    // ▒█∙∙▓▓
    // ▒█∙∙▓▓
    // ░█▓▒█▓
    // ∙▓███∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0036 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x05, 0x40, 
    0x00, 0x3f, 0x70, 
    0x00, 0xaf, 0x20, 
    0x00, 0xe9, 0x00, 
    0x07, 0xf4, 0x00, 
    0x0c, 0xfd, 0x80, 
    0x3f, 0xee, 0xf9, 
    0x7f, 0x20, 0xcc, 
    0x7f, 0x20, 0xcc, 
    0x7f, 0x20, 0xcc, 
    0x4f, 0xb8, 0xf9, 
    0x0a, 0xff, 0xd1, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: 7 (codepoint 0037)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▒▒▒▒░
    // ▒████▓
    // ▒█∙░█▒
    // ∙░∙░█░
    // ∙∙∙▓█∙
    // ∙∙∙▓▓∙
    // ∙∙░█▒∙
    // ∙∙▒█░∙
    // ∙∙▓█∙∙
    // ∙∙█▓∙∙
    // ∙░█▒∙∙
    // ∙▒█░∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0037 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x26, 0x66, 0x64, 
    0x7f, 0xff, 0xf9, 
    0x7f, 0x23, 0xf7, 
    0x25, 0x14, 0xf4, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0c, 0xc0, 
    0x00, 0x3f, 0x70, 
    0x00, 0x7f, 0x40, 
    0x00, 0xad, 0x10, 
    0x00, 0xec, 0x00, 
    0x03, 0xf7, 0x00, 
    0x07, 0xf4, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: 8 (codepoint 0038)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓███▒∙
    // ∙█▓∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ∙▓███░∙
    // ∙▓███▒∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█▓▒█▓∙
    // ∙▒███░∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0038 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x56, 0x40, 0x00, 
    0x0c, 0xff, 0xf7, 0x00, 
    0x0e, 0x90, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x0a, 0xfd, 0xf6, 0x00, 
    0x0c, 0xfe, 0xf7, 0x00, 
    0x3e, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x3f, 0xc6, 0xec, 0x00, 
    0x07, 0xff, 0xe4, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: 9 (codepoint 0039)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙▒▒∙∙
    // ∙████░
    // ░█░∙█▓
    // ▒█∙∙▓▓
    // ▒█∙∙▓▓
    // ░█░░█▓
    // ∙████▒
    // ∙∙░██∙
    // ∙∙░█▓∙
    // ∙∙▒█∙∙
    // ∙∙█▓∙∙
    // ∙░█░∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0039 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x66, 0x30, 
    0x0e, 0xff, 0xf4, 
    0x4f, 0x40, 0xe9, 
    0x7f, 0x20, 0xcc, 
    0x7f, 0x20, 0xcc, 
    0x4f, 0x63, 0xec, 
    0x0e, 0xff, 0xf7, 
    0x00, 0x5d, 0xd1, 
    0x00, 0x3f, 0x90, 
    0x00, 0x7f, 0x20, 
    0x00, 0xec, 0x00, 
    0x04, 0xf4, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: : (codepoint 003a)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ░▓░
    // ▒█░
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ░▓░
    // ▒█░
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x003a GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x5a, 0x40, 
    0x7f, 0x40, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x5a, 0x40, 
    0x7f, 0x40, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: ; (codepoint 003b)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ░▓░
    // ▒█░
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ░▓░
    // ▒█░
    // ▒█░
    // ▒▓∙
    // ░∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x003b GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x5a, 0x40, 
    0x7f, 0x40, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x5a, 0x40, 
    0x7f, 0x40, 
    0x7f, 0x40, 
    0x79, 0x00, 
    0x30, 0x00
}};

//-----------------------
// Character: < (codepoint 003c)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙░█
    // ∙░██
    // ▓█▓∙
    // ░██▒
    // ∙∙▓█
    // ∙∙∙▒
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x003c GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x3c, 
    0x06, 0xfd, 
    0xaf, 0xb1, 
    0x3f, 0xf6, 
    0x00, 0xcd, 
    0x00, 0x07, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: = (codepoint 003d)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙░░∙
    // ▓███
    // ∙░░∙
    // ▒▓▓▓
    // ▓███
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x003d GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x03, 0x33, 
    0xaf, 0xff, 
    0x03, 0x33, 
    0x7b, 0xba, 
    0xad, 0xdd, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: > (codepoint 003e)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ▓▓∙∙
    // ▒█▓∙
    // ∙░██
    // ∙██▓
    // ▓█░∙
    // ▒░∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x003e GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0xa9, 0x00, 
    0x8f, 0xb1, 
    0x06, 0xfe, 
    0x2d, 0xf9, 
    0xaf, 0x40, 
    0x84, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: ? (codepoint 003f)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙▒░∙∙
    // ░███▓∙
    // ▓█∙▒█░
    // ▓▓∙░█░
    // ∙∙∙▓█∙
    // ∙∙░█▓∙
    // ∙∙▓█∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙∙∙∙∙
    // ∙∙▓▒∙∙
    // ∙∙█▓∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x003f GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x02, 0x65, 0x10, 
    0x4f, 0xff, 0xc0, 
    0xad, 0x17, 0xf4, 
    0xab, 0x04, 0xf4, 
    0x00, 0x0a, 0xf2, 
    0x00, 0x3f, 0x90, 
    0x00, 0xad, 0x10, 
    0x00, 0xec, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0xa6, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: \x0040 (codepoint 0040)
// Size: 11 x 19
// ∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙░░∙∙∙∙
    // ∙∙▒█████▓∙∙
    // ∙▒█▒∙∙∙░█▓∙
    // ∙█▓∙∙░∙∙░█░
    // ░█░░███▒∙█▒
    // ░█░▓█░▓█∙█▒
    // ░█░▓▓∙▒█∙█▒
    // ░█░▓▓∙▒█∙█▒
    // ░█░▓▓∙▒█∙█▒
    // ░█░▓▓∙▒█∙█▒
    // ░█░▒█░▓█░█▒
    // ░█░░██▓███∙
    // ∙▓▓∙∙∙∙∙∙∙∙
    // ∙░██▒░░∙∙∙∙
    // ∙∙∙█████∙∙∙
//-----------------------
static const etl::array<const uint8_t, 114>
    image_data_General_16_Condensed_0x0040 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x23, 0x30, 0x00, 0x00, 
    0x00, 0x7f, 0xff, 0xff, 0xb1, 0x00, 
    0x07, 0xf8, 0x10, 0x06, 0xfc, 0x00, 
    0x0e, 0x90, 0x03, 0x10, 0x4f, 0x40, 
    0x3e, 0x43, 0xff, 0xf7, 0x0e, 0x70, 
    0x3e, 0x4a, 0xd4, 0xbd, 0x2e, 0x70, 
    0x3e, 0x4a, 0xc0, 0x7d, 0x2e, 0x70, 
    0x3e, 0x4a, 0xc0, 0x7d, 0x2e, 0x70, 
    0x3e, 0x4a, 0xc0, 0x7d, 0x2e, 0x70, 
    0x3e, 0x4a, 0xc0, 0x7d, 0x2e, 0x70, 
    0x3e, 0x47, 0xf4, 0xce, 0x5e, 0x70, 
    0x3e, 0x43, 0xff, 0xbe, 0xfd, 0x10, 
    0x0c, 0xc0, 0x00, 0x00, 0x00, 0x00, 
    0x04, 0xfd, 0x74, 0x33, 0x00, 0x00, 
    0x00, 0x2c, 0xff, 0xff, 0x20, 0x00
}};

//-----------------------
// Character: A (codepoint 0041)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙▒∙∙∙
    // ∙∙░█▓∙∙
    // ∙∙▒█▓∙∙
    // ∙∙▓██∙∙
    // ∙∙█▓█░∙
    // ∙░█░█▒∙
    // ∙▒█∙▓▓∙
    // ∙▓▓∙▓█∙
    // ∙█████∙
    // ░█▓▓▓█▒
    // ▒█░∙∙█▓
    // ▓█∙∙∙▓▓
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0041 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x06, 0x10, 0x00, 
    0x00, 0x4f, 0x90, 0x00, 
    0x00, 0x7f, 0xc0, 0x00, 
    0x00, 0xcd, 0xd1, 0x00, 
    0x00, 0xe9, 0xe4, 0x00, 
    0x04, 0xf3, 0xe7, 0x00, 
    0x07, 0xd1, 0xc9, 0x00, 
    0x0a, 0xc0, 0xad, 0x10, 
    0x0e, 0xfd, 0xff, 0x20, 
    0x3f, 0xcb, 0xbf, 0x70, 
    0x7f, 0x40, 0x0e, 0x90, 
    0xaf, 0x20, 0x0c, 0xc0, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: B (codepoint 0042)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒▒▒∙∙∙
    // ░████▓∙
    // ░█▒∙▓█∙
    // ░█▒∙▒█∙
    // ░█▒∙▒█∙
    // ░██▓█▓∙
    // ░████▒∙
    // ░█▒∙▒█∙
    // ░█▒∙░█░
    // ░█▒∙░█░
    // ░█▓▒██∙
    // ░████▒∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0042 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x66, 0x30, 0x00, 
    0x3f, 0xff, 0xf9, 0x00, 
    0x3f, 0x70, 0xaf, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0xdb, 0xf9, 0x00, 
    0x3f, 0xfe, 0xf8, 0x00, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0xa6, 0xdf, 0x20, 
    0x3f, 0xff, 0xf7, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: C (codepoint 0043)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓███▓∙
    // ░█▓∙▓█∙
    // ░█▒∙▒█∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙▒█∙
    // ∙██▒██∙
    // ∙░███░∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0043 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x56, 0x40, 0x00, 
    0x0a, 0xff, 0xf9, 0x00, 
    0x3f, 0x90, 0xaf, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x03, 0x00, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x0e, 0xe6, 0xdd, 0x10, 
    0x04, 0xff, 0xf4, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: D (codepoint 0044)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒▒▒░∙∙
    // ░████▓∙
    // ░█▒∙▒█░
    // ░█▒∙░█░
    // ░█▒∙░█░
    // ░█▒∙░█░
    // ░█▒∙░█░
    // ░█▒∙░█░
    // ░█▒∙░█░
    // ░█▒∙░█░
    // ░█▓▒▓█∙
    // ░████▒∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0044 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x66, 0x40, 0x00, 
    0x3f, 0xff, 0xfc, 0x00, 
    0x3f, 0x70, 0x7f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0xa6, 0xcf, 0x20, 
    0x3f, 0xff, 0xf7, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: E (codepoint 0045)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▒▒▒▒░
    // ░████▓
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▓▒▒∙
    // ░████▒
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▓▒▒░
    // ░████▓
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0045 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x06, 0x66, 0x64, 
    0x3f, 0xff, 0xfc, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0xa6, 0x63, 
    0x3f, 0xff, 0xf7, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0xa6, 0x64, 
    0x3f, 0xff, 0xfc, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: F (codepoint 0046)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▒▒▒▒░
    // ░████▓
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒░░∙
    // ░████▒
    // ░█▒░░∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0046 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x06, 0x66, 0x64, 
    0x3f, 0xff, 0xfc, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x73, 0x30, 
    0x3f, 0xff, 0xf7, 
    0x3f, 0x73, 0x30, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: G (codepoint 0047)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓███▓∙
    // ░█▓∙▓█░
    // ░█▒∙░█░
    // ░█▒∙∙∙∙
    // ░█▒∙░░∙
    // ░█▒▒██▒
    // ░█▒∙░█▒
    // ░█▒∙░█▒
    // ░█▒∙░█▒
    // ∙██▒▓█∙
    // ∙░███▒∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0047 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x56, 0x50, 0x00, 
    0x0a, 0xff, 0xfc, 0x00, 
    0x3f, 0x90, 0xaf, 0x40, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x33, 0x00, 
    0x3f, 0x77, 0xff, 0x70, 
    0x3f, 0x70, 0x5f, 0x70, 
    0x3f, 0x70, 0x3f, 0x70, 
    0x3f, 0x70, 0x3f, 0x70, 
    0x0e, 0xd6, 0xcf, 0x20, 
    0x04, 0xff, 0xf7, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: H (codepoint 0048)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒∙∙∙░∙
    // ░█▒∙▒█∙
    // ░█▒∙▒█∙
    // ░█▒∙▒█∙
    // ░█▒∙▒█∙
    // ░█▒░▒█∙
    // ░█████∙
    // ░█▒░▒█∙
    // ░█▒∙▒█∙
    // ░█▒∙▒█∙
    // ░█▒∙▒█∙
    // ░█▒∙▒█∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0048 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x30, 0x25, 0x10, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x73, 0x8f, 0x20, 
    0x3f, 0xff, 0xff, 0x20, 
    0x3f, 0x73, 0x8f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x3f, 0x70, 0x7f, 0x20, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: I (codepoint 0049)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙▒∙
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0049 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x06, 0x30, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: J (codepoint 004a)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙░░∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ∙∙∙▓█∙
    // ░▓▒██∙
    // ▒███░∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x004a GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x04, 0x50, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x00, 0x0a, 0xd1, 
    0x6b, 0x6e, 0xd1, 
    0x7f, 0xfe, 0x40, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: K (codepoint 004b)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒∙∙∙▒░
    // ░█▒∙▒█░
    // ░█▒∙█▓∙
    // ░█▒▒█░∙
    // ░█▒▓▓∙∙
    // ░█▓█▒∙∙
    // ░████∙∙
    // ░██▒█░∙
    // ░█▓∙█▓∙
    // ░█▒∙▓█∙
    // ░█▒∙░█▒
    // ░█▒∙∙█▓
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x004b GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x30, 0x06, 0x40, 
    0x3f, 0x70, 0x7f, 0x40, 
    0x3f, 0x70, 0xec, 0x00, 
    0x3f, 0x77, 0xf4, 0x00, 
    0x3f, 0x7c, 0x90, 0x00, 
    0x3f, 0xbf, 0x70, 0x00, 
    0x3f, 0xff, 0xd1, 0x00, 
    0x3f, 0xf9, 0xf4, 0x00, 
    0x3f, 0x90, 0xe9, 0x00, 
    0x3f, 0x70, 0xaf, 0x20, 
    0x3f, 0x70, 0x4f, 0x70, 
    0x3f, 0x70, 0x0e, 0xc0, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: L (codepoint 004c)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▒∙∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▓▒▒░
    // ░████▓
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x004c GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x06, 0x30, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0xa6, 0x64, 
    0x3f, 0xff, 0xf9, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: M (codepoint 004d)
// Size: 9 x 19
// ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙▒∙∙∙∙∙▒∙
    // ░█▓∙∙∙▒█░
    // ░█▓∙∙∙▓█░
    // ░██∙∙░██░
    // ░██▒∙▒██░
    // ░█▓▓∙▓▓█░
    // ░█▒█░█▒█░
    // ░█░▓█▓░█░
    // ░█░▒█▓░█░
    // ░█░░█░░█░
    // ░█░∙∙∙░█░
    // ░█░∙∙∙░█░
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 95>
    image_data_General_16_Condensed_0x004d GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x06, 0x10, 0x00, 0x06, 0x10, 
    0x3f, 0x90, 0x00, 0x7f, 0x40, 
    0x3f, 0xc0, 0x00, 0xcf, 0x40, 
    0x3f, 0xf2, 0x03, 0xff, 0x40, 
    0x3f, 0xf7, 0x07, 0xff, 0x40, 
    0x3e, 0xbc, 0x0c, 0xbf, 0x40, 
    0x3e, 0x7e, 0x5e, 0x7f, 0x40, 
    0x3e, 0x5c, 0xdc, 0x4f, 0x40, 
    0x3e, 0x47, 0xf9, 0x4f, 0x40, 
    0x3e, 0x43, 0xe4, 0x4f, 0x40, 
    0x3e, 0x40, 0x00, 0x4f, 0x40, 
    0x3e, 0x40, 0x00, 0x4f, 0x40, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: N (codepoint 004e)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒∙∙∙░∙
    // ░█▒∙∙█▒
    // ░█▓∙∙█▒
    // ░██░∙█▒
    // ░██▓∙█▒
    // ░█▒█∙█▒
    // ░█░█░█▒
    // ░█░▓▓█▒
    // ░█░░██▒
    // ░█░∙▓█▒
    // ░█░∙▒█▒
    // ░█░∙░█▒
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x004e GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x10, 0x05, 0x30, 
    0x3f, 0x70, 0x0e, 0x70, 
    0x3f, 0xc0, 0x0e, 0x70, 
    0x3f, 0xf4, 0x0e, 0x70, 
    0x3e, 0xe9, 0x0e, 0x70, 
    0x3e, 0x9d, 0x2e, 0x70, 
    0x3e, 0x5e, 0x5e, 0x70, 
    0x3e, 0x4a, 0xae, 0x70, 
    0x3e, 0x43, 0xdf, 0x70, 
    0x3e, 0x40, 0xcf, 0x70, 
    0x3e, 0x40, 0x7f, 0x70, 
    0x3e, 0x40, 0x3f, 0x70, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: O (codepoint 004f)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓████∙
    // ░█▓∙░█▒
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▒
    // ∙██▒▓█░
    // ∙░███▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x004f GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x46, 0x51, 0x00, 
    0x0a, 0xff, 0xfd, 0x10, 
    0x3f, 0x90, 0x4f, 0x70, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x70, 
    0x0e, 0xe6, 0xaf, 0x40, 
    0x04, 0xff, 0xf9, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: P (codepoint 0050)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒▒▒░∙∙
    // ░████▓∙
    // ░█▒∙▒█░
    // ░█▒∙░█▒
    // ░█▒∙░█▒
    // ░█▒∙░█░
    // ░█████∙
    // ░██▓▒∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0050 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x66, 0x40, 0x00, 
    0x3f, 0xff, 0xfc, 0x00, 
    0x3f, 0x70, 0x7f, 0x40, 
    0x3f, 0x70, 0x4f, 0x70, 
    0x3f, 0x70, 0x4f, 0x70, 
    0x3f, 0x70, 0x4f, 0x40, 
    0x3f, 0xfd, 0xfd, 0x10, 
    0x3f, 0xdb, 0x91, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: Q (codepoint 0051)
// Size: 8 x 19
// ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙∙
    // ∙▓████∙∙
    // ░█▓∙░█▒∙
    // ░█▒∙∙█▓∙
    // ░█▒∙∙█▓∙
    // ░█▒∙∙█▓∙
    // ░█▒∙∙█▓∙
    // ░█▒∙∙█▓∙
    // ░█▒∙∙█▓∙
    // ░█▒░██▒∙
    // ∙██▒██▓∙
    // ∙░█████▒
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0051 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x46, 0x51, 0x00, 
    0x0a, 0xff, 0xfd, 0x10, 
    0x3f, 0x90, 0x4f, 0x70, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x74, 0xdf, 0x70, 
    0x0e, 0xe9, 0xff, 0x90, 
    0x04, 0xff, 0xfd, 0xf7, 
    0x00, 0x00, 0x00, 0x20, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: R (codepoint 0052)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒▒▒░∙∙
    // ░████▓∙
    // ░█▒∙▒█▒
    // ░█▒∙░█▒
    // ░█▒∙░█▒
    // ░█▒░▒█░
    // ░████▓∙
    // ░█▒▒█░∙
    // ░█▒∙█▓∙
    // ░█▒∙▓█∙
    // ░█▒∙▒█░
    // ░█▒∙░█▓
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0052 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x66, 0x40, 0x00, 
    0x3f, 0xff, 0xfc, 0x10, 
    0x3f, 0x70, 0x7f, 0x70, 
    0x3f, 0x70, 0x3f, 0x70, 
    0x3f, 0x70, 0x3f, 0x70, 
    0x3f, 0x73, 0x8f, 0x40, 
    0x3f, 0xff, 0xf9, 0x00, 
    0x3f, 0x77, 0xf4, 0x00, 
    0x3f, 0x70, 0xe9, 0x00, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0x7f, 0x40, 
    0x3f, 0x70, 0x3f, 0x90, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: S (codepoint 0053)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓███▓∙
    // ░█▒∙▒█░
    // ░█░∙░█░
    // ░█▒∙∙∙∙
    // ∙▓█▓░∙∙
    // ∙∙▒██▓∙
    // ∙∙∙∙▓█░
    // ∙░∙∙░█░
    // ░█░∙░█░
    // ░█▓▒▓█∙
    // ∙▒███▒∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0053 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x56, 0x50, 0x00, 
    0x0c, 0xff, 0xfc, 0x00, 
    0x3f, 0x70, 0x7f, 0x40, 
    0x4f, 0x40, 0x4d, 0x40, 
    0x3f, 0x70, 0x00, 0x00, 
    0x0c, 0xfb, 0x40, 0x00, 
    0x00, 0x8f, 0xf9, 0x00, 
    0x00, 0x00, 0xaf, 0x40, 
    0x03, 0x00, 0x4f, 0x40, 
    0x4f, 0x40, 0x4f, 0x40, 
    0x3f, 0xc6, 0xcf, 0x20, 
    0x07, 0xff, 0xf7, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: T (codepoint 0054)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ░▒▒▒▒░
    // █████▓
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙█▓∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0054 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x56, 0x66, 0x64, 
    0xef, 0xff, 0xf9, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0xe9, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: U (codepoint 0055)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒∙∙░░∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█▓▒█▓∙
    // ∙▒███░∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0055 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x26, 0x10, 0x45, 0x00, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x3f, 0xc6, 0xec, 0x00, 
    0x07, 0xff, 0xe4, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: V (codepoint 0056)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ░░∙∙∙▒
    // ▓█∙∙▒█
    // ▒█∙∙▓█
    // ░█░∙▓▓
    // ░█▒∙█▒
    // ∙█▓░█░
    // ∙▓▓░█∙
    // ∙▒█▒█∙
    // ∙░█▓▓∙
    // ∙░██▒∙
    // ∙∙██░∙
    // ∙∙▓█∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0056 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x54, 0x00, 0x26, 
    0xad, 0x10, 0x7f, 
    0x7f, 0x20, 0xad, 
    0x4f, 0x40, 0xcc, 
    0x3f, 0x70, 0xe7, 
    0x0e, 0x93, 0xe4, 
    0x0a, 0xc4, 0xf2, 
    0x07, 0xd8, 0xd1, 
    0x04, 0xfc, 0xc0, 
    0x03, 0xff, 0x70, 
    0x00, 0xef, 0x40, 
    0x00, 0xaf, 0x20, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: W (codepoint 0057)
// Size: 9 x 19
// ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ░░∙∙░∙∙∙░
    // ▓▓∙░█░∙▓█
    // ▓█∙░█▒∙▓▓
    // ▒█∙▒█▓∙▓▓
    // ░█∙▓█▓∙█▒
    // ░█░▓▓█░█▒
    // ░█░█▒█░█░
    // ∙█▓█░█▒█∙
    // ∙▓██∙▓██∙
    // ∙▓█▓∙▓█▓∙
    // ∙▒█▓∙▒█▓∙
    // ∙▒█▒∙░█▓∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 95>
    image_data_General_16_Condensed_0x0057 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x54, 0x00, 0x51, 0x02, 0x50, 
    0xcc, 0x03, 0xe4, 0x0a, 0xd0, 
    0xad, 0x14, 0xf7, 0x0c, 0xc0, 
    0x7d, 0x17, 0xf9, 0x0c, 0x90, 
    0x4f, 0x2a, 0xdc, 0x0e, 0x70, 
    0x4f, 0x5c, 0x9c, 0x4f, 0x70, 
    0x3e, 0x5e, 0x7e, 0x5e, 0x40, 
    0x0e, 0x9e, 0x3e, 0x9f, 0x20, 
    0x0c, 0xdd, 0x1c, 0xdd, 0x10, 
    0x0a, 0xfc, 0x0a, 0xfc, 0x00, 
    0x07, 0xf9, 0x07, 0xf9, 0x00, 
    0x07, 0xf7, 0x04, 0xf9, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: X (codepoint 0058)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ░░∙∙∙░
    // ▒█∙∙▓▓
    // ░█▒░█▒
    // ∙▓▓▒█∙
    // ∙░██▓∙
    // ∙∙▓█░∙
    // ∙∙▓█∙∙
    // ∙░██▒∙
    // ∙▒█▓█∙
    // ∙█▓░█░
    // ░█░∙▓▓
    // ▓█∙∙▒█
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0058 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x55, 0x00, 0x25, 
    0x7f, 0x20, 0xcc, 
    0x3f, 0x73, 0xf7, 
    0x0a, 0xc8, 0xd1, 
    0x04, 0xfe, 0x90, 
    0x00, 0xcf, 0x40, 
    0x00, 0xaf, 0x20, 
    0x03, 0xff, 0x70, 
    0x07, 0xdb, 0xd1, 
    0x0e, 0x94, 0xf4, 
    0x4f, 0x40, 0xcc, 
    0xcd, 0x10, 0x7f, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: Y (codepoint 0059)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ▒░∙∙░░
    // ▓▓∙∙█▓
    // ▒█∙░█░
    // ░█░▒█∙
    // ∙▓▓▓▓∙
    // ∙▒██░∙
    // ∙░██∙∙
    // ∙∙▓▓∙∙
    // ∙∙▓▓∙∙
    // ∙∙▓▓∙∙
    // ∙∙▓▓∙∙
    // ∙∙▓▓∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0059 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x64, 0x00, 0x55, 
    0xcc, 0x00, 0xe9, 
    0x7f, 0x24, 0xf4, 
    0x3e, 0x47, 0xd1, 
    0x0c, 0xac, 0x90, 
    0x07, 0xff, 0x40, 
    0x03, 0xfd, 0x10, 
    0x00, 0xcc, 0x00, 
    0x00, 0xcc, 0x00, 
    0x00, 0xcc, 0x00, 
    0x00, 0xcc, 0x00, 
    0x00, 0xcc, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: Z (codepoint 005a)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▒▒▒▒∙
    // ░████▒
    // ∙∙∙▒█∙
    // ∙∙∙▓▓∙
    // ∙∙░█▒∙
    // ∙∙▒█∙∙
    // ∙∙▓▓∙∙
    // ∙░█▒∙∙
    // ∙▒█∙∙∙
    // ∙█▓∙∙∙
    // ░█▓▒▒∙
    // ░████▒
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x005a GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x06, 0x66, 0x63, 
    0x3f, 0xff, 0xf7, 
    0x00, 0x07, 0xf2, 
    0x00, 0x0c, 0xc0, 
    0x00, 0x3f, 0x70, 
    0x00, 0x7f, 0x20, 
    0x00, 0xcc, 0x00, 
    0x03, 0xf7, 0x00, 
    0x07, 0xf2, 0x00, 
    0x0e, 0xc0, 0x00, 
    0x4f, 0xa6, 0x63, 
    0x4f, 0xff, 0xf7, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: [ (codepoint 005b)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙██
    // ∙██
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙██
    // ∙▓▓
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x005b GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x0c, 0xd0, 
    0x0e, 0xd0, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0xf0, 
    0x0a, 0xb0
}};

//-----------------------
// Character: \ (codepoint 005c)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ▓▓∙∙
    // ▓▓∙∙
    // ▒█∙∙
    // ░█∙∙
    // ░█▒∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▒█∙
    // ∙░█∙
    // ∙░█░
    // ∙∙█▒
    // ∙∙▓▓
    // ∙∙▓▓
    // ∙∙▒█
    // ∙∙░█
    // ∙∙∙░
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x005c GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0xa9, 0x00, 
    0xac, 0x00, 
    0x7d, 0x10, 
    0x4f, 0x20, 
    0x3f, 0x70, 
    0x0c, 0x90, 
    0x0a, 0xc0, 
    0x07, 0xd1, 
    0x04, 0xf2, 
    0x03, 0xe4, 
    0x00, 0xe7, 
    0x00, 0xc9, 
    0x00, 0xac, 
    0x00, 0x7d, 
    0x00, 0x4f, 
    0x00, 0x03
}};

//-----------------------
// Character: ] (codepoint 005d)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ██▒
    // ▓█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ∙█▒
    // ██▒
    // ▓▓░
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x005d GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0xcd, 0x70, 
    0xaf, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0x0e, 0x70, 
    0xdf, 0x70, 
    0xab, 0x40
}};

//-----------------------
// Character: ^ (codepoint 005e)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙▒▒∙∙
    // ∙∙██∙∙
    // ∙▓██▓∙
    // ░█▒▓█∙
    // ∙∙∙∙░∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x005e GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x77, 0x00, 
    0x00, 0xed, 0x10, 
    0x0a, 0xff, 0x90, 
    0x3f, 0x7a, 0xf2, 
    0x03, 0x00, 0x30, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: _ (codepoint 005f)
// Size: 5 x 19
// ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ▓████
    // ▒▓▓▓▓
    // ∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x005f GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0xad, 0xdd, 0xd0, 
    0x8b, 0xbb, 0xa0, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: ` (codepoint 0060)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ▒▓∙
    // ▒█░
    // ∙▓█
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0060 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x79, 0x00, 
    0x7f, 0x40, 
    0x0a, 0xd0, 
    0x00, 0x30, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: a (codepoint 0061)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙░∙∙∙
    // ∙▓███░∙
    // ∙█▓∙█▓∙
    // ∙∙∙∙▓▓∙
    // ∙░███▓∙
    // ∙██▒█▓∙
    // ░█░∙▓▓∙
    // ░█▒░█▓∙
    // ∙▓███▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0061 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x03, 0x00, 0x00, 
    0x0a, 0xff, 0xf4, 0x00, 
    0x0e, 0x90, 0xdc, 0x00, 
    0x00, 0x00, 0xcc, 0x00, 
    0x04, 0xdd, 0xfc, 0x00, 
    0x0e, 0xd6, 0xdc, 0x00, 
    0x3e, 0x40, 0xcc, 0x00, 
    0x3f, 0x84, 0xfc, 0x00, 
    0x0c, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: b (codepoint 0062)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▒∙∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░████▒
    // ░█▓░█▓
    // ░█▒∙▓▓
    // ░█▒∙▓▓
    // ░█▒∙▓▓
    // ░█▒∙▓▓
    // ░█▓░█▓
    // ░█▓██░
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0062 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x06, 0x30, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x10, 
    0x3f, 0xdf, 0xf7, 
    0x3f, 0xa4, 0xec, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0xc4, 0xfc, 
    0x3f, 0xbf, 0xf4, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: c (codepoint 0063)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙░∙∙
    // ∙▓███∙
    // ░█▓░█▓
    // ░█░∙▒▒
    // ░█░∙∙∙
    // ░█░∙∙∙
    // ░█░∙▒▒
    // ░█▓░█▓
    // ∙▓███∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0063 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x23, 0x00, 
    0x0a, 0xff, 0xf2, 
    0x3f, 0x94, 0xe9, 
    0x4f, 0x40, 0x88, 
    0x4f, 0x40, 0x00, 
    0x4f, 0x40, 0x00, 
    0x4f, 0x40, 0x88, 
    0x3f, 0xa5, 0xf9, 
    0x0a, 0xff, 0xe2, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: d (codepoint 0064)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙░░
    // ∙∙∙∙▓▓
    // ∙∙∙∙▓▓
    // ∙∙░∙▓▓
    // ∙▓███▓
    // ░█▓░█▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█▓░█▓
    // ∙▓███▓
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0064 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x54, 
    0x00, 0x00, 0xc9, 
    0x00, 0x00, 0xc9, 
    0x00, 0x30, 0xc9, 
    0x0c, 0xfe, 0xd9, 
    0x3f, 0x94, 0xf9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x3f, 0xa5, 0xf9, 
    0x0c, 0xfe, 0xd9, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: e (codepoint 0065)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙░∙∙
    // ∙▓███∙
    // ░█▒░█▓
    // ░█░∙▓▓
    // ░████▓
    // ░█▓▓▓▒
    // ░█░∙∙∙
    // ░█▓▒█▓
    // ∙▒███∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0065 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x23, 0x00, 
    0x0a, 0xff, 0xe2, 
    0x3f, 0x84, 0xf9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0xed, 0xf9, 
    0x4f, 0xcb, 0xb6, 
    0x4f, 0x40, 0x21, 
    0x3f, 0xb7, 0xf9, 
    0x07, 0xff, 0xe2, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: f (codepoint 0066)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙░░
    // ∙▓██
    // ∙█▓∙
    // ∙█▓∙
    // ▓███
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0066 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x45, 
    0x0a, 0xff, 
    0x0e, 0x90, 
    0x2e, 0xa3, 
    0xcf, 0xff, 
    0x2e, 0xa3, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: g (codepoint 0067)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙░∙∙∙
    // ∙▓███▓
    // ░█▒░█▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█▓░█▓
    // ∙▓███▓
    // ∙░∙∙▓▓
    // ░█▒∙█▓
    // ∙▓███░
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0067 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x30, 0x21, 
    0x0c, 0xfe, 0xd9, 
    0x3f, 0x83, 0xe9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x3f, 0x94, 0xf9, 
    0x0c, 0xfe, 0xd9, 
    0x03, 0x30, 0xc9, 
    0x3f, 0x70, 0xe9, 
    0x0c, 0xff, 0xf4
}};

//-----------------------
// Character: h (codepoint 0068)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒∙∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░████▓∙
    // ░█▓░▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0068 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x30, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x30, 0x00, 
    0x3f, 0xdf, 0xf9, 0x00, 
    0x3f, 0xa4, 0xcd, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: i (codepoint 0069)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙░∙
    // ░█▒
    // ∙░∙
    // ∙░∙
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0069 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x03, 0x00, 
    0x3f, 0x70, 
    0x03, 0x00, 
    0x03, 0x00, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: j (codepoint 006a)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ∙█▓
    // ∙∙∙
    // ∙∙∙
    // ∙█▓
    // ∙█▓
    // ∙█▓
    // ∙█▓
    // ∙█▓
    // ∙█▓
    // ∙█▓
    // ∙█▓
    // ∙█▓
    // ░█▓
    // ██░
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x006a GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x02, 0x10, 
    0x0e, 0x90, 
    0x02, 0x10, 
    0x02, 0x10, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x3e, 0x90, 
    0xef, 0x40
}};

//-----------------------
// Character: k (codepoint 006b)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▒∙∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ░█▒∙∙░∙
    // ░█▒∙▓█∙
    // ░█▒░█▒∙
    // ░█▒▓▓∙∙
    // ░███▓∙∙
    // ░████∙∙
    // ░█▓░█▓∙
    // ░█▒∙▓█∙
    // ░█▒∙░█▓
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x006b GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x06, 0x30, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x03, 0x00, 
    0x3f, 0x70, 0xaf, 0x20, 
    0x3f, 0x73, 0xf7, 0x00, 
    0x3f, 0x7c, 0xc0, 0x00, 
    0x3f, 0xdf, 0x90, 0x00, 
    0x3f, 0xfd, 0xf2, 0x00, 
    0x3f, 0xc3, 0xf9, 0x00, 
    0x3f, 0x70, 0xaf, 0x20, 
    0x3f, 0x70, 0x3f, 0x90, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: l (codepoint 006c)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙▒∙∙
    // ░█▒∙
    // ░█▒∙
    // ░█▒∙
    // ░█▒∙
    // ░█▒∙
    // ░█▒∙
    // ░█▒∙
    // ░█▒∙
    // ░█▒∙
    // ∙█▓∙
    // ∙▒█▒
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x006c GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x06, 0x30, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x0e, 0xc3, 
    0x07, 0xf7, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: m (codepoint 006d)
// Size: 10 x 19
// ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙░∙∙∙∙∙░∙∙
    // ░████▓███∙
    // ░█▓░██░▒█░
    // ░█▒∙▓█∙░█░
    // ░█▒∙▓█∙░█░
    // ░█▒∙▓█∙░█░
    // ░█▒∙▓█∙░█░
    // ░█▒∙▓█∙░█░
    // ░█▒∙▓█∙░█░
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 95>
    image_data_General_16_Condensed_0x006d GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x03, 0x00, 0x30, 0x03, 0x00, 
    0x3f, 0xdf, 0xfa, 0xef, 0xd1, 
    0x3f, 0xb4, 0xdf, 0x47, 0xf4, 
    0x3f, 0x70, 0xad, 0x14, 0xf4, 
    0x3f, 0x70, 0xad, 0x14, 0xf4, 
    0x3f, 0x70, 0xad, 0x14, 0xf4, 
    0x3f, 0x70, 0xad, 0x14, 0xf4, 
    0x3f, 0x70, 0xad, 0x14, 0xf4, 
    0x3f, 0x70, 0xad, 0x14, 0xf4, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: n (codepoint 006e)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙░∙∙∙∙∙
    // ░████▓∙
    // ░█▓░▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x006e GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x03, 0x00, 0x30, 0x00, 
    0x3f, 0xdf, 0xf9, 0x00, 
    0x3f, 0xa4, 0xcd, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: o (codepoint 006f)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▓███∙
    // ░█▒░█▒
    // ░█░░█▒
    // ░█░░█▒
    // ░█░░█▒
    // ░█░░█▒
    // ░█▓▓█▒
    // ∙▓██▓∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x006f GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x23, 0x00, 
    0x0c, 0xff, 0xd1, 
    0x4f, 0x86, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x3f, 0xba, 0xf7, 
    0x0a, 0xff, 0xb1, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: p (codepoint 0070)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙░∙∙∙∙
    // ░████▒
    // ░█▓░█▓
    // ░█▒∙▓▓
    // ░█▒∙▓▓
    // ░█▒∙▓▓
    // ░█▒∙▓▓
    // ░█▓░█▓
    // ░█▓██░
    // ░█▒∙∙∙
    // ░█▒∙∙∙
    // ░█▒∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0070 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x03, 0x00, 0x10, 
    0x3f, 0xdf, 0xf7, 
    0x3f, 0xa4, 0xec, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0x70, 0xcc, 
    0x3f, 0xc4, 0xfc, 
    0x3f, 0xbf, 0xf4, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00
}};

//-----------------------
// Character: q (codepoint 0071)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙░∙∙∙
    // ∙▓███▓
    // ░█▓░█▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█░∙▓▓
    // ░█▓░█▓
    // ∙▓███▓
    // ∙∙∙∙▓▓
    // ∙∙∙∙▓▓
    // ∙∙∙∙▓▓
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0071 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x30, 0x21, 
    0x0c, 0xfe, 0xd9, 
    0x3f, 0x94, 0xf9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x4f, 0x40, 0xc9, 
    0x3f, 0xa5, 0xf9, 
    0x0c, 0xfe, 0xd9, 
    0x00, 0x00, 0xc9, 
    0x00, 0x00, 0xc9, 
    0x00, 0x00, 0xc9
}};

//-----------------------
// Character: r (codepoint 0072)
// Size: 5 x 19
// ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙░∙∙∙
    // ░█▓█▓
    // ░██▒∙
    // ░█▒∙∙
    // ░█▒∙∙
    // ░█▒∙∙
    // ░█▒∙∙
    // ░█▒∙∙
    // ░█▒∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0072 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x03, 0x00, 0x10, 
    0x3f, 0x9f, 0x90, 
    0x3f, 0xf6, 0x10, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x3f, 0x70, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: s (codepoint 0073)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙▓██▓∙
    // ░█░▒█░
    // ░█░∙∙∙
    // ∙██▓░∙
    // ∙∙▒██░
    // ∙░∙░█▒
    // ▒█▒▒█▒
    // ∙▓██▓∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0073 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x23, 0x00, 
    0x0c, 0xff, 0xb0, 
    0x4f, 0x47, 0xf4, 
    0x4f, 0x40, 0x00, 
    0x0e, 0xfb, 0x40, 
    0x00, 0x8f, 0xf4, 
    0x25, 0x13, 0xf7, 
    0x7f, 0x67, 0xf7, 
    0x0c, 0xff, 0xb0, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: t (codepoint 0074)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙░░∙
    // ∙█▓∙
    // ∙█▓∙
    // ▓██▓
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙█▓∙
    // ∙▓█░
    // ∙▒█▓
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x0074 GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x05, 0x40, 
    0x0e, 0x90, 
    0x2e, 0xa1, 
    0xcf, 0xfc, 
    0x2e, 0xa1, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0e, 0x90, 
    0x0c, 0xe4, 
    0x07, 0xfc, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00
}};

//-----------------------
// Character: u (codepoint 0075)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙░∙∙∙∙∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▓▒█▓∙
    // ∙▓███▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x0075 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x03, 0x00, 0x21, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0xc7, 0xfc, 0x00, 
    0x0a, 0xfe, 0xdc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: v (codepoint 0076)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ▒█∙∙▓▓
    // ░█░∙█▓
    // ∙█▒░█░
    // ∙▓▓░█∙
    // ∙▒█▓▓∙
    // ∙░██▒∙
    // ∙∙▓█░∙
    // ∙∙▓█∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0076 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x03, 0x00, 0x03, 
    0x7f, 0x20, 0xac, 
    0x3e, 0x40, 0xe9, 
    0x0e, 0x73, 0xe4, 
    0x0a, 0xc4, 0xf2, 
    0x07, 0xdb, 0xc0, 
    0x03, 0xee, 0x70, 
    0x00, 0xcf, 0x40, 
    0x00, 0xad, 0x10, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: w (codepoint 0077)
// Size: 9 x 19
// ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ▒█∙░█░∙▓▓
    // ░█░░█▒∙█▒
    // ∙█▒▒█▓░█░
    // ∙▓▓▓▓█░█∙
    // ∙▒▓▓░█▓▓∙
    // ∙░██∙▓█▓∙
    // ∙∙█▓∙▓█░∙
    // ∙∙▓▓∙▒█∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 95>
    image_data_General_16_Condensed_0x0077 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x03, 0x00, 0x00, 0x00, 0x10, 
    0x7f, 0x23, 0xe4, 0x0c, 0x90, 
    0x3e, 0x44, 0xf7, 0x0e, 0x70, 
    0x0e, 0x77, 0xfc, 0x3e, 0x40, 
    0x0c, 0x9a, 0x9c, 0x6d, 0x10, 
    0x07, 0xcc, 0x5d, 0x9c, 0x00, 
    0x04, 0xee, 0x2c, 0xe9, 0x00, 
    0x00, 0xec, 0x0a, 0xf4, 0x00, 
    0x00, 0xc9, 0x07, 0xf2, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: x (codepoint 0078)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ░█▒∙█▓
    // ∙▓▓░█░
    // ∙░██▓∙
    // ∙∙▓█∙∙
    // ∙∙▓█░∙
    // ∙░██▓∙
    // ∙▓▓░█▒
    // ▒█░∙▓█
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0078 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x03, 0x00, 0x03, 
    0x4f, 0x70, 0xec, 
    0x0c, 0xc6, 0xf4, 
    0x04, 0xfe, 0xc0, 
    0x00, 0xcf, 0x20, 
    0x00, 0xcf, 0x40, 
    0x04, 0xfe, 0xc0, 
    0x0c, 0xc4, 0xf7, 
    0x7f, 0x40, 0xcd, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: y (codepoint 0079)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ▒█∙∙▓▓
    // ░█░∙█▓
    // ∙█▓░█░
    // ∙▓▓▒█∙
    // ∙░█▓▓∙
    // ∙░██▓∙
    // ∙∙▓█░∙
    // ∙∙▒█∙∙
    // ∙∙▒█∙∙
    // ∙∙▓▓∙∙
    // ░██░∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x0079 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x03, 0x00, 0x03, 
    0x7f, 0x20, 0xcc, 
    0x3e, 0x40, 0xe9, 
    0x0e, 0x93, 0xe4, 
    0x0a, 0xc7, 0xf2, 
    0x04, 0xfc, 0xc0, 
    0x03, 0xff, 0x90, 
    0x00, 0xcf, 0x40, 
    0x00, 0x7f, 0x20, 
    0x00, 0x7d, 0x10, 
    0x00, 0xc9, 0x00, 
    0x3f, 0xf4, 0x00
}};

//-----------------------
// Character: z (codepoint 007a)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙░░░∙∙
    // ░████∙
    // ∙░░▓█∙
    // ∙∙░█▒∙
    // ∙∙▓█∙∙
    // ∙░█▒∙∙
    // ∙▓█∙∙∙
    // ░█▓▒▒∙
    // ░████░
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x007a GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x03, 0x33, 0x30, 
    0x4f, 0xff, 0xf2, 
    0x03, 0x3b, 0xd1, 
    0x00, 0x3f, 0x70, 
    0x00, 0xad, 0x10, 
    0x03, 0xf7, 0x00, 
    0x0c, 0xd1, 0x00, 
    0x4f, 0xb6, 0x61, 
    0x4f, 0xff, 0xf4, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: { (codepoint 007b)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ∙∙█▓
    // ∙▒█░
    // ∙▓█∙
    // ∙▓█∙
    // ∙▓█∙
    // ∙▓█∙
    // ∙▓█∙
    // ▒█▓∙
    // ▒█▓∙
    // ∙▓█∙
    // ∙▓█∙
    // ∙▓█∙
    // ∙▓█∙
    // ∙▓█∙
    // ∙▒█▒
    // ∙∙█▓
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x007b GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x01, 
    0x02, 0xec, 
    0x07, 0xf4, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x7f, 0xc0, 
    0x7f, 0xc0, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x0a, 0xd1, 
    0x07, 0xf7, 
    0x00, 0xdc
}};

//-----------------------
// Character: | (codepoint 007c)
// Size: 3 x 19
// ∙∙∙
    // ∙∙∙
    // ∙∙∙
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ░█▒
    // ∙▒∙
    // ∙∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x007c GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0x3c, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x3f, 0x70, 
    0x06, 0x30, 
    0x00, 0x00
}};

//-----------------------
// Character: } (codepoint 007d)
// Size: 4 x 19
// ∙∙∙∙
    // ∙∙∙∙
    // ∙∙∙∙
    // ▓█░∙
    // ∙█▓∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▒█▓
    // ∙▓█▓
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ∙▓▓∙
    // ░█▓∙
    // ▓█∙∙
//-----------------------
static const etl::array<const uint8_t, 38>
    image_data_General_16_Condensed_0x007d GLYPH_STORAGE {{
    0x00, 0x00, 
    0x00, 0x00, 
    0x00, 0x00, 
    0xaf, 0x40, 
    0x2e, 0xc0, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x07, 0xf9, 
    0x0a, 0xf9, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x0c, 0xc0, 
    0x4e, 0xc0, 
    0xae, 0x20
}};

//-----------------------
// Character: ~ (codepoint 007e)
// Size: 5 x 19
// ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙░∙∙░
    // ▒███▓
    // ▓▓∙▓░
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x007e GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x05, 0x12, 0x50, 
    0x7f, 0xfe, 0xc0, 
    0xab, 0x2b, 0x60, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: © (codepoint 00a9)
// Size: 9 x 19
// ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙░░∙∙∙
    // ∙∙█████▒∙
    // ∙▓▓∙∙∙░█░
    // ░█∙▓██░▓▓
    // ░█░█░▓▓▒▓
    // ░█░█░∙∙▒▓
    // ░█░█▒█▓▒▓
    // ░█∙▓██∙▓▓
    // ∙█▓∙∙∙░█░
    // ∙░█████▒∙
    // ∙∙∙∙▒░∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 95>
    image_data_General_16_Condensed_0x00a9 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x02, 0x33, 0x00, 0x00, 
    0x02, 0xdf, 0xdf, 0xf7, 0x00, 
    0x0c, 0xa1, 0x00, 0x6f, 0x40, 
    0x3e, 0x2c, 0xff, 0x4a, 0x90, 
    0x4d, 0x4e, 0x5c, 0x97, 0xc0, 
    0x4d, 0x4e, 0x40, 0x07, 0xc0, 
    0x4d, 0x4e, 0x7d, 0x97, 0xc0, 
    0x3e, 0x2a, 0xfe, 0x2a, 0x90, 
    0x0e, 0xa1, 0x00, 0x5e, 0x40, 
    0x03, 0xdf, 0xdf, 0xf8, 0x00, 
    0x00, 0x02, 0x64, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: ® (codepoint 00ae)
// Size: 9 x 19
// ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙░░∙∙∙
    // ∙∙█████▒∙
    // ∙▓▓∙∙∙░█░
    // ░█∙▓██∙▓▓
    // ░█∙▓░▓▒▒▓
    // ░█∙▓▓█▒▒▓
    // ░█∙▓▓█∙▒▓
    // ░█∙▓░▓▒▓▓
    // ∙█▓∙∙∙░█░
    // ∙░█████▒∙
    // ∙∙∙∙▒░∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 95>
    image_data_General_16_Condensed_0x00ae GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x02, 0x33, 0x00, 0x00, 
    0x02, 0xdf, 0xdf, 0xf7, 0x00, 
    0x0c, 0xa1, 0x00, 0x6f, 0x40, 
    0x3e, 0x2c, 0xfd, 0x2a, 0x90, 
    0x4d, 0x1c, 0x4a, 0x77, 0xc0, 
    0x4d, 0x1c, 0xcf, 0x77, 0xc0, 
    0x4d, 0x1c, 0xbd, 0x17, 0xc0, 
    0x3e, 0x2c, 0x5c, 0x7a, 0x90, 
    0x0e, 0xa1, 0x00, 0x5e, 0x40, 
    0x03, 0xdf, 0xdf, 0xf8, 0x00, 
    0x00, 0x02, 0x64, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: µ (codepoint 00b5)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙░∙∙∙∙∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▓▒██░
    // ░███▓█▓
    // ░█▒∙∙∙∙
    // ░█▒∙∙∙∙
    // ∙░∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x00b5 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x03, 0x00, 0x21, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0xc7, 0xfe, 0x50, 
    0x3f, 0xff, 0xcf, 0xc0, 
    0x3f, 0x70, 0x00, 0x00, 
    0x3f, 0x70, 0x00, 0x00, 
    0x03, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: Ä (codepoint 00c4)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▓▓∙▓▓∙
    // ∙▒▒∙▒▒∙
    // ∙∙∙▒∙∙∙
    // ∙∙░█▓∙∙
    // ∙∙▒█▓∙∙
    // ∙∙▓██∙∙
    // ∙∙█▓█░∙
    // ∙░█░█▒∙
    // ∙▒█∙▓▓∙
    // ∙▓▓∙▓█∙
    // ∙█████∙
    // ░█▓▓▓█▒
    // ▒█░∙∙█▓
    // ▓█∙∙∙▓▓
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x00c4 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x0a, 0xb1, 0xab, 0x00, 
    0x07, 0x91, 0x88, 0x00, 
    0x00, 0x06, 0x10, 0x00, 
    0x00, 0x4f, 0x90, 0x00, 
    0x00, 0x7f, 0xc0, 0x00, 
    0x00, 0xcd, 0xd1, 0x00, 
    0x00, 0xe9, 0xe4, 0x00, 
    0x04, 0xf3, 0xe7, 0x00, 
    0x07, 0xd1, 0xc9, 0x00, 
    0x0a, 0xc0, 0xad, 0x10, 
    0x0e, 0xfd, 0xff, 0x20, 
    0x3f, 0xcb, 0xbf, 0x70, 
    0x7f, 0x40, 0x0e, 0x90, 
    0xaf, 0x20, 0x0c, 0xc0, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: Ö (codepoint 00d6)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▓▓∙▓▓∙
    // ∙▒▒∙▒▒∙
    // ∙∙░▒░∙∙
    // ∙▓████∙
    // ░█▓∙░█▒
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▒
    // ∙██▒▓█░
    // ∙░███▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x00d6 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x0a, 0xb1, 0xab, 0x10, 
    0x07, 0x91, 0x79, 0x10, 
    0x00, 0x46, 0x51, 0x00, 
    0x0a, 0xff, 0xfd, 0x10, 
    0x3f, 0x90, 0x4f, 0x70, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x70, 
    0x0e, 0xe6, 0xaf, 0x40, 
    0x04, 0xff, 0xf9, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: Ü (codepoint 00dc)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▓▒∙█▒∙
    // ∙▒▒∙▓▒∙
    // ∙▒∙∙░░∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█░∙▓█∙
    // ░█▓▒█▓∙
    // ∙▒███░∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x00dc GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x0a, 0x80, 0xc8, 0x00, 
    0x08, 0x60, 0xa6, 0x00, 
    0x26, 0x10, 0x45, 0x00, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x4f, 0x40, 0xad, 0x10, 
    0x3f, 0xc6, 0xec, 0x00, 
    0x07, 0xff, 0xe4, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: ß (codepoint 00df)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓███▓∙
    // ░█▓∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙█▓∙
    // ░█▒▓█░∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒∙▓█∙
    // ░█▒░█▓∙
    // ░█▒▓█░∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x00df GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x56, 0x40, 0x00, 
    0x0c, 0xff, 0xf9, 0x00, 
    0x3f, 0x90, 0xcd, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x72, 0xec, 0x00, 
    0x3f, 0x7a, 0xf4, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x70, 0xad, 0x10, 
    0x3f, 0x73, 0xec, 0x00, 
    0x3f, 0x7a, 0xf4, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: ä (codepoint 00e4)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙▓▓∙█▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙░∙∙∙
    // ∙▓███░∙
    // ∙█▓∙█▓∙
    // ∙∙∙∙▓▓∙
    // ∙░███▓∙
    // ∙██▒█▓∙
    // ░█░∙▓▓∙
    // ░█▒░█▓∙
    // ∙▓███▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x00e4 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x02, 0x10, 0x21, 0x00, 
    0x0c, 0xc0, 0xe9, 0x00, 
    0x02, 0x10, 0x21, 0x00, 
    0x00, 0x03, 0x00, 0x00, 
    0x0a, 0xff, 0xf4, 0x00, 
    0x0e, 0x90, 0xdc, 0x00, 
    0x00, 0x00, 0xcc, 0x00, 
    0x04, 0xdd, 0xfc, 0x00, 
    0x0e, 0xd6, 0xdc, 0x00, 
    0x3e, 0x40, 0xcc, 0x00, 
    0x3f, 0x84, 0xfc, 0x00, 
    0x0c, 0xff, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: ö (codepoint 00f6)
// Size: 6 x 19
// ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙░∙
    // ∙█▒░█░
    // ∙∙∙∙░∙
    // ∙∙∙∙∙∙
    // ∙▓███∙
    // ░█▒░█▒
    // ░█░░█▒
    // ░█░░█▒
    // ░█░░█▒
    // ░█░░█▒
    // ░█▓▓█▒
    // ∙▓██▓∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
    // ∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 57>
    image_data_General_16_Condensed_0x00f6 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x02, 0x00, 0x30, 
    0x0e, 0x74, 0xf4, 
    0x02, 0x00, 0x30, 
    0x00, 0x23, 0x00, 
    0x0c, 0xff, 0xd1, 
    0x4f, 0x86, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x4f, 0x43, 0xf7, 
    0x3f, 0xba, 0xf7, 
    0x0a, 0xff, 0xb1, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00
}};

//-----------------------
// Character: ü (codepoint 00fc)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙░∙∙
    // ∙▓▓░█▒∙
    // ∙∙∙∙░∙∙
    // ∙░∙∙∙∙∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▒∙▓▓∙
    // ░█▓▒█▓∙
    // ∙▓███▓∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x00fc GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x02, 0x10, 0x30, 0x00, 
    0x0c, 0xc3, 0xf7, 0x00, 
    0x02, 0x10, 0x30, 0x00, 
    0x03, 0x00, 0x21, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0x70, 0xcc, 0x00, 
    0x3f, 0xc7, 0xfc, 0x00, 
    0x0a, 0xfe, 0xdc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};

//-----------------------
// Character: Ω (codepoint 03a9)
// Size: 7 x 19
// ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙░▒░∙∙
    // ∙▓████∙
    // ░█▓∙░█▒
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▓
    // ░█▒∙∙█▒
    // ∙██∙▓█▒
    // ░██∙▓█▓
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙
//-----------------------
static const etl::array<const uint8_t, 76>
    image_data_General_16_Condensed_0x03a9 GLYPH_STORAGE {{
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x46, 0x51, 0x00, 
    0x0a, 0xff, 0xfd, 0x10, 
    0x3f, 0x90, 0x4f, 0x70, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x90, 
    0x3f, 0x70, 0x0e, 0x70, 
    0x2e, 0xd1, 0xaf, 0x70, 
    0x3f, 0xf2, 0xcf, 0x90, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00
}};


///////////////////////////////////////////////////////////////////////////////////////////////////
// Character definitions
///////////////////////////////////////////////////////////////////////////////////////////////////
static const etl::array<Gfx::Font::Character, 106> General_16_Condensed_Chars CHARDEF_STORAGE{{

    // character: ' '
    {
        .codepoint = 0x0020,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0020,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '!'
    {
        .codepoint = 0x0021,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0021,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '"'
    {
        .codepoint = 0x0022,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0022,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '#'
    {
        .codepoint = 0x0023,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0023,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '$'
    {
        .codepoint = 0x0024,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0024,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '%'
    {
        .codepoint = 0x0025,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0025,
            .size = {
                .width = 9,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '&'
    {
        .codepoint = 0x0026,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0026,
            .size = {
                .width = 8,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '''
    {
        .codepoint = 0x0027,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0027,
            .size = {
                .width = 2,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '('
    {
        .codepoint = 0x0028,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0028,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: ')'
    {
        .codepoint = 0x0029,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0029,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '*'
    {
        .codepoint = 0x002a,
        .glyph = {
            .data = image_data_General_16_Condensed_0x002a,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '+'
    {
        .codepoint = 0x002b,
        .glyph = {
            .data = image_data_General_16_Condensed_0x002b,
            .size = {
                .width = 5,
                .height = 19
            },
            .block = 8
        }
    },

    // character: ','
    {
        .codepoint = 0x002c,
        .glyph = {
            .data = image_data_General_16_Condensed_0x002c,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '-'
    {
        .codepoint = 0x002d,
        .glyph = {
            .data = image_data_General_16_Condensed_0x002d,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '.'
    {
        .codepoint = 0x002e,
        .glyph = {
            .data = image_data_General_16_Condensed_0x002e,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '/'
    {
        .codepoint = 0x002f,
        .glyph = {
            .data = image_data_General_16_Condensed_0x002f,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '0'
    {
        .codepoint = 0x0030,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0030,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '1'
    {
        .codepoint = 0x0031,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0031,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '2'
    {
        .codepoint = 0x0032,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0032,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '3'
    {
        .codepoint = 0x0033,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0033,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '4'
    {
        .codepoint = 0x0034,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0034,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '5'
    {
        .codepoint = 0x0035,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0035,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '6'
    {
        .codepoint = 0x0036,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0036,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '7'
    {
        .codepoint = 0x0037,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0037,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '8'
    {
        .codepoint = 0x0038,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0038,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '9'
    {
        .codepoint = 0x0039,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0039,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: ':'
    {
        .codepoint = 0x003a,
        .glyph = {
            .data = image_data_General_16_Condensed_0x003a,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: ';'
    {
        .codepoint = 0x003b,
        .glyph = {
            .data = image_data_General_16_Condensed_0x003b,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '<'
    {
        .codepoint = 0x003c,
        .glyph = {
            .data = image_data_General_16_Condensed_0x003c,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '='
    {
        .codepoint = 0x003d,
        .glyph = {
            .data = image_data_General_16_Condensed_0x003d,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '>'
    {
        .codepoint = 0x003e,
        .glyph = {
            .data = image_data_General_16_Condensed_0x003e,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '?'
    {
        .codepoint = 0x003f,
        .glyph = {
            .data = image_data_General_16_Condensed_0x003f,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '\x0040'
    {
        .codepoint = 0x0040,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0040,
            .size = {
                .width = 11,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'A'
    {
        .codepoint = 0x0041,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0041,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'B'
    {
        .codepoint = 0x0042,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0042,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'C'
    {
        .codepoint = 0x0043,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0043,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'D'
    {
        .codepoint = 0x0044,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0044,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'E'
    {
        .codepoint = 0x0045,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0045,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'F'
    {
        .codepoint = 0x0046,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0046,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'G'
    {
        .codepoint = 0x0047,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0047,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'H'
    {
        .codepoint = 0x0048,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0048,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'I'
    {
        .codepoint = 0x0049,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0049,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'J'
    {
        .codepoint = 0x004a,
        .glyph = {
            .data = image_data_General_16_Condensed_0x004a,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'K'
    {
        .codepoint = 0x004b,
        .glyph = {
            .data = image_data_General_16_Condensed_0x004b,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'L'
    {
        .codepoint = 0x004c,
        .glyph = {
            .data = image_data_General_16_Condensed_0x004c,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'M'
    {
        .codepoint = 0x004d,
        .glyph = {
            .data = image_data_General_16_Condensed_0x004d,
            .size = {
                .width = 9,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'N'
    {
        .codepoint = 0x004e,
        .glyph = {
            .data = image_data_General_16_Condensed_0x004e,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'O'
    {
        .codepoint = 0x004f,
        .glyph = {
            .data = image_data_General_16_Condensed_0x004f,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'P'
    {
        .codepoint = 0x0050,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0050,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'Q'
    {
        .codepoint = 0x0051,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0051,
            .size = {
                .width = 8,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'R'
    {
        .codepoint = 0x0052,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0052,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'S'
    {
        .codepoint = 0x0053,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0053,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'T'
    {
        .codepoint = 0x0054,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0054,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'U'
    {
        .codepoint = 0x0055,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0055,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'V'
    {
        .codepoint = 0x0056,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0056,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'W'
    {
        .codepoint = 0x0057,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0057,
            .size = {
                .width = 9,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'X'
    {
        .codepoint = 0x0058,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0058,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'Y'
    {
        .codepoint = 0x0059,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0059,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'Z'
    {
        .codepoint = 0x005a,
        .glyph = {
            .data = image_data_General_16_Condensed_0x005a,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '['
    {
        .codepoint = 0x005b,
        .glyph = {
            .data = image_data_General_16_Condensed_0x005b,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '\'
    {
        .codepoint = 0x005c,
        .glyph = {
            .data = image_data_General_16_Condensed_0x005c,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: ']'
    {
        .codepoint = 0x005d,
        .glyph = {
            .data = image_data_General_16_Condensed_0x005d,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '^'
    {
        .codepoint = 0x005e,
        .glyph = {
            .data = image_data_General_16_Condensed_0x005e,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '_'
    {
        .codepoint = 0x005f,
        .glyph = {
            .data = image_data_General_16_Condensed_0x005f,
            .size = {
                .width = 5,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '`'
    {
        .codepoint = 0x0060,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0060,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'a'
    {
        .codepoint = 0x0061,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0061,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'b'
    {
        .codepoint = 0x0062,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0062,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'c'
    {
        .codepoint = 0x0063,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0063,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'd'
    {
        .codepoint = 0x0064,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0064,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'e'
    {
        .codepoint = 0x0065,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0065,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'f'
    {
        .codepoint = 0x0066,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0066,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'g'
    {
        .codepoint = 0x0067,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0067,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'h'
    {
        .codepoint = 0x0068,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0068,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'i'
    {
        .codepoint = 0x0069,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0069,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'j'
    {
        .codepoint = 0x006a,
        .glyph = {
            .data = image_data_General_16_Condensed_0x006a,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'k'
    {
        .codepoint = 0x006b,
        .glyph = {
            .data = image_data_General_16_Condensed_0x006b,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'l'
    {
        .codepoint = 0x006c,
        .glyph = {
            .data = image_data_General_16_Condensed_0x006c,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'm'
    {
        .codepoint = 0x006d,
        .glyph = {
            .data = image_data_General_16_Condensed_0x006d,
            .size = {
                .width = 10,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'n'
    {
        .codepoint = 0x006e,
        .glyph = {
            .data = image_data_General_16_Condensed_0x006e,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'o'
    {
        .codepoint = 0x006f,
        .glyph = {
            .data = image_data_General_16_Condensed_0x006f,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'p'
    {
        .codepoint = 0x0070,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0070,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'q'
    {
        .codepoint = 0x0071,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0071,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'r'
    {
        .codepoint = 0x0072,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0072,
            .size = {
                .width = 5,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 's'
    {
        .codepoint = 0x0073,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0073,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 't'
    {
        .codepoint = 0x0074,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0074,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'u'
    {
        .codepoint = 0x0075,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0075,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'v'
    {
        .codepoint = 0x0076,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0076,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'w'
    {
        .codepoint = 0x0077,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0077,
            .size = {
                .width = 9,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'x'
    {
        .codepoint = 0x0078,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0078,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'y'
    {
        .codepoint = 0x0079,
        .glyph = {
            .data = image_data_General_16_Condensed_0x0079,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'z'
    {
        .codepoint = 0x007a,
        .glyph = {
            .data = image_data_General_16_Condensed_0x007a,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '{'
    {
        .codepoint = 0x007b,
        .glyph = {
            .data = image_data_General_16_Condensed_0x007b,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '|'
    {
        .codepoint = 0x007c,
        .glyph = {
            .data = image_data_General_16_Condensed_0x007c,
            .size = {
                .width = 3,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '}'
    {
        .codepoint = 0x007d,
        .glyph = {
            .data = image_data_General_16_Condensed_0x007d,
            .size = {
                .width = 4,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '~'
    {
        .codepoint = 0x007e,
        .glyph = {
            .data = image_data_General_16_Condensed_0x007e,
            .size = {
                .width = 5,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '©'
    {
        .codepoint = 0x00a9,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00a9,
            .size = {
                .width = 9,
                .height = 19
            },
            .block = 8
        }
    },

    // character: '®'
    {
        .codepoint = 0x00ae,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00ae,
            .size = {
                .width = 9,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'µ'
    {
        .codepoint = 0x00b5,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00b5,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'Ä'
    {
        .codepoint = 0x00c4,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00c4,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'Ö'
    {
        .codepoint = 0x00d6,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00d6,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'Ü'
    {
        .codepoint = 0x00dc,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00dc,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'ß'
    {
        .codepoint = 0x00df,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00df,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'ä'
    {
        .codepoint = 0x00e4,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00e4,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'ö'
    {
        .codepoint = 0x00f6,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00f6,
            .size = {
                .width = 6,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'ü'
    {
        .codepoint = 0x00fc,
        .glyph = {
            .data = image_data_General_16_Condensed_0x00fc,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    },

    // character: 'Ω'
    {
        .codepoint = 0x03a9,
        .glyph = {
            .data = image_data_General_16_Condensed_0x03a9,
            .size = {
                .width = 7,
                .height = 19
            },
            .block = 8
        }
    }

}};

///////////////////////////////////////////////////////////////////////////////////////////////////
// Font definition
///////////////////////////////////////////////////////////////////////////////////////////////////

const Gfx::Font Gfx::Font::gGeneral_16_Condensed{
    .name = "General_16_Condensed",
    // total of 106 characters
    .characters = General_16_Condensed_Chars,
    // font metrics
    .fontSize = 16,
    .lineHeight = 19,
    // ascent: 21, descent 4
};

